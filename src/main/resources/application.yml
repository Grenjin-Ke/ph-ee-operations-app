fineract:
  datasource:
    core:
      host: operations-mysql
      port: 3306
      schema: tenants
      username: root
      password: mysql
    common:
      protocol: jdbc
      subprotocol: mysql
      driverclass_name: com.mysql.cj.jdbc.Driver
  tenant:
    host: ${FINERACT_DEFAULT_TENANTDB_HOSTNAME:localhost}
    port: ${FINERACT_DEFAULT_TENANTDB_PORT:3306}
    username: ${FINERACT_DEFAULT_TENANTDB_UID:root}
    password: ${FINERACT_DEFAULT_TENANTDB_PWD:mysql}
    parameters: ${FINERACT_DEFAULT_TENANTDB_CONN_PARAMS:}
    timezone: ${FINERACT_DEFAULT_TENANTDB_TIMEZONE:Asia/Kolkata}
    identifier: ${FINERACT_DEFAULT_TENANTDB_IDENTIFIER:default}
    name: ${FINERACT_DEFAULT_TENANTDB_NAME:fineract_default}
    description: ${FINERACT_DEFAULT_TENANTDB_DESCRIPTION:Default Demo Tenant}

token:
  user:
    access-validity-seconds: 600
    refresh-validity-seconds: 43200
  client:
    access-validity-seconds: 3600

config:
  imu:
    rate-validity-seconds: 300

caching:
  enabled: false

security:
  filter-order: 4

spring:
  resources:
    add-mappings: false
  mvc:
    favicon:
      enabled: false
  jmx:
    enabled: false
  liquibase:
    enabled: false
    change-log: classpath:/db/changelog/db.changelog-master.xml
    parameters:
      fineract:
        tenant:
          identifier: ${fineract.tenant.identifier}
          description: ${fineract.tenant.description}
          timezone: ${fineract.tenant.timezone}
          schema-name: ${fineract.tenant.name}
          host: ${fineract.tenant.host}
          port: ${fineract.tenant.port}
          username: ${fineract.tenant.username}
          password: ${fineract.tenant.password}
          parameters: ${fineract.tenant.parameters}

server:
  port: 5000

rest:
  authorization:
    enabled: false
    settings:
      - endpoint: "/api/v1/transfer/*/refund"
        authority: "hasAuthority('REFUND')"
      - endpoint: "/api/v1/**"
        authority: "hasAuthority('ALL_FUNCTIONS')"
logging:
  level:
    ROOT: ERROR
    pattern:
      console: "%clr(%d{dd-MM-yyyy HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%35.35t]){faint} %clr(%-28.28logger{28}){cyan} %clr(:){faint}%X{BUSINESS-LOG} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"

cloud:
  aws:
    enabled: true
    credentials:
      access-key: ${AWS_ACCESS_KEY:AKIAX32JM37TZOJ5AKFB}
      secret-key: ${AWS_SECRET_KEY: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}
    region:
      static: us-east-2
    stack:
      auto: false
  azure:
    enabled: false
    blob:
      connection-string:

payment:
  modes:
    - id: "slcb"
      type: "BATCH"

application:
  bucket-name: paymenthub-ee-dev